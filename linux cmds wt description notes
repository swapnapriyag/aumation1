hostname   :server name
uname   :displays the os
uname -a:more detailed with prvt ip
cat /etc/redhot-release
arch    :to see the os version of os
top     :how many users are logged in and cpu spacen total usage all will displays.
top+1   :no.of cpu's we can see.
alias   :to see the alias commands.
which cmd name  :displays the path/description of the cmd
 (which id,which alias:usr/bin/alias)
ctrl+r  :we can see the previous command
ctrl+l  :to clear the screen
clear
cd -    :we can go to the previous directiory
cd ..   :we can get back to 2 directories from present directory.
cd ~    :we can go to the ec2-user
su - username :required password.
sudo su - :switching to the root user.
sudo su - ec2-user :switching to the ec2-user.
nslookup dnsname :the website name is in DNS or not
TRACEROUTE websitename(linux) :we can see where the packets dropped.
TRACE-PATH  :equals to TRACEROUTE.
TRACERT.EXE websitename(windows)
ping websitename :it's keep on calling the website name.
                  in aws ping not enabled,if we want we can enable by ICMP packets.
nmap  :it is port scan tool in remote server how many ports are opened.
nmap ipaddress
tcp dump  :it is also port scan tool(we can check in 1 server)
22/tcp open ssh
80/tcp open http
443/tcp open https
nc -vz privateip port no :the port opened or not
telnet ipaddress port no 
whoami   :displays user name
who am i :parent loggedin user
who      :displays those who are logged in like ec2-user etc..
w        :displays current loggedin user
top(in this zombi should always zero)
last
ls -ltra :including all hidden files also
ls -ltrh :human readable format
ls a*
ls z*   :to list the all files starting with specific letter      
        :including file permissions also
ls d*   :You want to get a directory listing of all the files beginning with the letter "d".
ls -ld  :It will give the list of directories, without descending into subdirectories.
ls -lRt  : all directories and internal files also not hidden files.
ls -lRta : including hidden files also
vi filename :to create the file
esc+i/insert :to write in the file.
esc:set nu:giving the line numbers.
esc:wc -l: total words count in the file 
esc:1   :goes to the line 1
esc:wq! :with save and quit
esc:q!  :with out sva and quit
dd :delete the line
yy :copy the line
x  :delete the charecter
i  :insert
p  :paste
esc /keyword :to search the keyword where it is located n to go to the next word occurance press "n"
echo "content" >> filename
touch filename1,file name2,......
touch -f test [1-20]
rm filename :deletes the file wt permissions.
remove -f test1,test2,......:forcefully deletes the file.
chmod 644 filename :change the file permissions
chmod -R 777* :for directiory permissions.
chown -R user:group filename/directory
more filename   : to see the small files content
less filename   : to see the file content with navigation keys(arrows)
id username  :displays the user id
chage -l username  :displays the user password expired or not
/etc/passwd   :user information available here
passwd username :changing/giving the password to the user
sudo vi sudoers   :add the user in to the sudoers file
/etc/group    :group information
/etc/shadow   :password information
echo $PATH    :displays the path of the bin 
echo $SHELL   :shell
echo $PWD     :present path
echo $USER    :which user we have logged in
$HOME         :/home/ec2-user
df -h   : display the file systems
mkfs   :make the file system
os bootup commands fdisk,fstab
fdisk   :for partitions of the disks
fdisk -l   :to see the hard disk
fstab    :perminent storage
yum install packagename  :installing the package
yum install package1,package2 ....:installs more package
yum repolist  :list of repositories
yum remove packagename  :removes the package
yum remove package1,package2.....:removes the no.of packages
yum grouplist  :lists the groups
systemctl enable httpd  :enabling the process
systemctl start httpd   :start the apache
systemctl stop httpd    :stop the apache
ps -ef | grep httpd     :to check the apache running or not
netstat -anlp | grep ":80"   :how many processes are running on the port no 80
rpm -qa httpd  :to check the apache is there or not
rpm -ql jdk*   :to know the package installation location.
java - version  :to know the java version
find / - name filename :to find the file where it has located
find / - name directory -type d
apache installation paths
yum 
rpm
source code
binary(zip,tar...)
useradd username  :creating the user
userdel username  :deleting the user
find . -name "*.tif" -size -160k -delete     ::deleting the files of lower size
              Note the - before 160k. Just 160k means exactly 160 kilobytes. -160k means smaller than 160 kilobytes.
              +160k means larger than 160 kilobytes.If you want to filter size in bytes (as in 160 bytes instead of 160 kilobytes)
              then you have to write it like this: 160c. If you just write 160 it will be interpreted as 160*512 bytes.
find -type f \( -name "*zip" -o -name "*tar" -o -name "*gz" \) -size +1M -delete  :deleting the file based on type and large size
              the \( \) construct allows to group different filename patterns
              by using -delete option, we can avoid piping and troubles with xargs See this, this and this
              ./ or . is optional when using find command for current directory
find -type f \( -name "*zip" -o -name "*tar" -o -name "*gz" \) -size +1M -exec rm {} +
              where all the files filtered by find command is passed to rm command
find <Path> <Conditions> | xargs cp -t <copy file path>
              :copy the file from one path to another path by using find command
find <path> <condition> -exec cp '{}' <copy path> \;
find /path/to/search -name "*.doc" -exec cp {} /path/to/copy/to \;
find /path/to/files* -mtime +5 -exec rm {} \;
              deleting the files oldeer than 5 days
              The first argument is the path to the files. This can be a path, a directory, or a wildcard as in the example above. 
              I would recommend using the full path, and make sure that you run the command without the exec rm to make sure you are
              getting the right results.
              The second argument, -mtime, is used to specify the number of days old that the file is. If you enter +5, it will find 
              files older than 5 days.
              The third argument, -exec, allows you to pass in a command such as rm. The {} \; at the end is required to end the 
              command.

